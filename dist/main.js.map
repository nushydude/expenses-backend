{"version":3,"sources":["webpack://default/webpack/universalModuleDefinition","webpack://default/webpack/bootstrap","webpack://default/external \"mongoose\"","webpack://default/external \"jsonwebtoken\"","webpack://default/external \"invariant\"","webpack://default/external \"upash\"","webpack://default/external \"@sendgrid/mail\"","webpack://default/external \"@saeris/graphql-scalars\"","webpack://default/external \"@phc/argon2\"","webpack://default/external \"micro-cors\"","webpack://default/external \"apollo-server-micro\"","webpack://default/external \"cuid\"","webpack://default/external \"dataloader\"","webpack://default/external \"fast-json-stable-stringify\"","webpack://default/external \"sift\"","webpack://default/external \"validator\"","webpack://default/./src/graphql/utils/getUserByJWT.js","webpack://default/./src/graphql/utils/hashPassword.js","webpack://default/./src/graphql/utils/index.js","webpack://default/./src/mongoose/connectors/Expense.js","webpack://default/./src/mongoose/createMongooseBatchLoader.js","webpack://default/./src/mongoose/createMongooseDataLoader.js","webpack://default/./src/mongoose/Model.js","webpack://default/./src/mongoose/models/Expense.js","webpack://default/./src/enums/role.js","webpack://default/./src/mongoose/connectors/User.js","webpack://default/./src/graphql/utils/generateAccountVerificationSecret.js","webpack://default/./src/mongoose/models/User.js","webpack://default/./src/mongoose/createContextModels.js","webpack://default/./src/graphql/createContext.js","webpack://default/./src/graphql/mutations/Expense/addExpense.js","webpack://default/./src/graphql/utils/generatePasswordResetSecret.js","webpack://default/./src/graphql/utils/validatePasswordResetSecret.js","webpack://default/./src/graphql/mutations/User/changePassword.js","webpack://default/./src/enums/emailAddress.js","webpack://default/./src/enums/emailCategory.js","webpack://default/./src/graphql/utils/emailAccountVerificationLink.js","webpack://default/./src/graphql/mutations/User/sendAccountVerificationLink.js","webpack://default/./src/graphql/utils/emailPasswordResetLink.js","webpack://default/./src/graphql/mutations/User/sendResetPasswordLink.js","webpack://default/./src/graphql/mutations/User/signUpWithEmail.js","webpack://default/./src/graphql/utils/validateAccountVerificationSecret.js","webpack://default/./src/graphql/mutations/User/verifyAccount.js","webpack://default/./src/graphql/mutations/User/index.js","webpack://default/./src/graphql/mutations/index.js","webpack://default/./src/graphql/queries/EnvVars/getEnvVars.js","webpack://default/./src/graphql/queries/Expense/getExpenses.js","webpack://default/./src/graphql/queries/index.js","webpack://default/./src/graphql/schema/EnvVars/index.js","webpack://default/./src/graphql/schema/Expense/index.js","webpack://default/./src/graphql/schema/User/index.js","webpack://default/./src/graphql/types.js","webpack://default/./src/graphql/resolvers.js","webpack://default/./src/graphql/helpers/Error.js","webpack://default/./src/graphql/helpers/MutationResponse.js","webpack://default/./src/graphql/helpers/index.js","webpack://default/./src/graphql/rootMutation.js","webpack://default/./src/graphql/rootQuery.js","webpack://default/./src/graphql/typeDefs.js","webpack://default/./src/graphql/createHandler.js","webpack://default/./src/mongoose/handleConnectionError.js","webpack://default/./src/mongoose/index.js","webpack://default/./src/index.js"],"names":["getUserByJWT","jwt","console","log","id","cuid","hashPassword","password","hash","upash","use","schema","Schema","amount","type","Number","date","Date","paymentMethod","String","name","ExpenseConnector","model","createMongooseBatchLoader","connector","batchLoadQueries","queries","query","find","$or","queryResults","results","map","q","filter","sift","createMongooseDataLoader","DataLoader","cacheKeyFn","stringify","Model","constructor","config","loader","isDiscriminator","Boolean","baseModelName","createDiscriminatorQuery","__t","modelName","transformedQuery","load","result","rawResult","records","findOne","record","findByID","_id","mongoose","Types","ObjectId","findOneAndUpdate","criteria","update","opts","defaultOpts","new","runValidators","finalOpts","lean","exec","findByIDAndUpdate","findByIDAndDelete","findByIdAndDelete","findOneAndDelete","ExpenseModel","create","expenseDoc","ROLE","ADMIN","USER","email","unique","required","passwordHash","roles","default","validate","validator","value","ROLES","Object","values","every","role","includes","message","lastLoggedInAt","passwordChangedAt","verified","verificationSecret","resetPasswordSecret","timestamps","UserConnector","CONFIG","algorithm","expiresIn","issuer","process","env","JWT_ISSUER","generateAccountVerificationSecret","userID","sign","ACCOUNT_VERIFICATION_SECRET","UserModel","userDoc","user","$set","toString","createContextModels","Expense","User","createContext","req","headers","authorization","db","addExpense","_","input","ctx","expense","error","typeDef","generatePasswordResetSecret","PASSWORD_RESET_SECRET","validatePasswordResetSecret","verify","changePassword","root","confirmPassword","passwordChanged","length","$unset","invariant","EMAIL_ADDRESS","NO_REPLY","EMAIL_CATEGORY","RESET_PASSWORD","VERIFY_ACCOUNT","emailAccountVerificationLink","sgMail","send","from","to","substitutions","link","ACCOUNT_VERIFICATION_URL","text","verifyAccountTemplate","subject","categories","sendAccountVerificationLink","emailPasswordResetLink","sendMail","PASSWORD_RESET_URL","resetPasswordEmailTemplate","sendResetPasswordLink","signUpWithEmail","isEmail","created","validateAccountVerificationSecret","verifyAccount","getEnvVars","secret","SECRET","now","getExpenses","args","expenses","EnvVars","types","resolvers","DateTime","Query","Mutation","MutationResponse","__resolveType","Error","rootMutation","expenseMutations","userMutations","rootQuery","envVarsQueries","expenseQueries","rootSchema","typeDefs","resolver","concat","DateTimeScalar","server","ApolloServer","introspection","playground","context","createHandler","handleConnectionError","connect","MONGODB_CONNECTION_STRING","useNewUrlParser","connection","on","set","mongooseConnect","setApiKey","SENDGRID_API_KEY","list","install","argon2","cors","allowMethods","res","method","end"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"default\"] = factory();\n\telse\n\t\troot[\"default\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = require(\"mongoose\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"invariant\");","module.exports = require(\"upash\");","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"@saeris/graphql-scalars\");","module.exports = require(\"@phc/argon2\");","module.exports = require(\"micro-cors\");","module.exports = require(\"apollo-server-micro\");","module.exports = require(\"cuid\");","module.exports = require(\"dataloader\");","module.exports = require(\"fast-json-stable-stringify\");","module.exports = require(\"sift\");","module.exports = require(\"validator\");","import cuid from 'cuid';\n\nexport async function getUserByJWT(jwt: string) {\n  console.log('jwt:', jwt);\n\n  // TODO:\n  // - validate jwt\n  // - find user in DB and return\n\n  return {\n    id: cuid(),\n  };\n}\n","import upash from 'upash';\n\nexport async function hashPassword(password) {\n  const hash = await upash.use('argon2').hash(password);\n\n  return hash;\n}\n","export * from './getUserByJWT';\nexport * from './hashPassword';\n","import { model, Schema } from 'mongoose';\n\nexport const schema = new Schema({\n  amount: { type: Number },\n  date: { type: Date },\n  paymentMethod: { type: String },\n  type: { type: String },\n});\n\nconst name = 'Expense';\n\nexport const ExpenseConnector = model(name, schema);\n","import sift from 'sift';\n\n// generates our batch loader function for plugging into a DataLoader, running\n// the queries against the provided mongoose model\nexport function createMongooseBatchLoader(connector) {\n  async function batchLoadQueries(queries) {\n    // use the $or operator to combine all of our queries into a single DB op\n    const query = connector.find({ $or: queries });\n\n    const queryResults = await query;\n\n    // use sift.js to filter our results in memory using the exact same queries to\n    // emulate a response for each query that was passed.\n    const results = queries.map(q => queryResults.filter(sift(q)));\n\n    return results;\n  }\n\n  return batchLoadQueries;\n}\n","import DataLoader from 'dataloader';\nimport stringify from 'fast-json-stable-stringify';\nimport { createMongooseBatchLoader } from './createMongooseBatchLoader';\n\n// simple wrapper abstracting DataLoader creation, preconfiguring it with a\n// specific cache key function and injecting our mongoose batch loader function\nexport function createMongooseDataLoader(connector) {\n  return new DataLoader(createMongooseBatchLoader(connector), {\n    // determnistic so our queries correctly caches\n    cacheKeyFn: stringify,\n  });\n}\n","import mongoose from 'mongoose';\nimport { createMongooseDataLoader } from './createMongooseDataLoader';\n\n// thin wrapper around a connector (mongoose model) that provides us an interface\n// to delegate all of our retrieval methods to a DataLoader instance.\nexport class Model {\n  constructor(config) {\n    this.connector = config.connector;\n    this.loader = createMongooseDataLoader(this.connector);\n    this.isDiscriminator = Boolean(this.connector.baseModelName);\n  }\n\n  createDiscriminatorQuery(query) {\n    if (this.isDiscriminator) {\n      return { ...query, __t: this.connector.modelName };\n    }\n\n    return query;\n  }\n\n  // escape hatch method that applies any transformatons to our query we'd expect\n  query(query) {\n    const transformedQuery = this.createDiscriminatorQuery(query);\n\n    return this.connector.find(transformedQuery);\n  }\n\n  // simple pass through allowing easy extension in a subclass\n  async load(query) {\n    const transformedQuery = this.createDiscriminatorQuery(query);\n\n    const result = await this.loader.load(transformedQuery);\n\n    return result;\n  }\n\n  async find(query) {\n    const rawResult = await this.load(query);\n\n    const records = rawResult.filter(Boolean);\n\n    return records;\n  }\n\n  async findOne(query) {\n    const [record] = await this.load(query);\n\n    return record;\n  }\n\n  async findByID(id) {\n    let record;\n\n    if (!record) {\n      const query = {\n        _id:\n          typeof id === 'string' ? new mongoose.Schema.Types.ObjectId(id) : id,\n      };\n\n      record = await this.findOne(query);\n    }\n\n    return record;\n  }\n\n  async findOneAndUpdate(criteria, update, opts) {\n    const defaultOpts = { new: true, runValidators: true };\n    const finalOpts = { ...defaultOpts, ...opts };\n\n    const record = await this.connector\n      .findOneAndUpdate(criteria, update, finalOpts)\n      .lean()\n      .exec();\n\n    return record;\n  }\n\n  async findByIDAndUpdate(id, update, opts) {\n    const criteria = {\n      _id: typeof id === 'string' ? new mongoose.Schema.Types.ObjectId(id) : id,\n    };\n    const defaultOpts = { new: true, runValidators: true };\n    const finalOpts = { ...defaultOpts, ...opts };\n\n    const record = await this.findOneAndUpdate(criteria, update, finalOpts);\n\n    return record;\n  }\n\n  async findByIDAndDelete(id) {\n    const record = await this.connector\n      .findByIdAndDelete(id)\n      .lean()\n      .exec();\n\n    return record;\n  }\n\n  async findOneAndDelete(criteria) {\n    const record = await this.connector\n      .findOneAndDelete(criteria)\n      .lean()\n      .exec();\n\n    return record;\n  }\n}\n","import { Model } from '../Model';\n\nexport class ExpenseModel extends Model {\n  async create(expenseDoc) {\n    const result = await this.connector.create(expenseDoc);\n\n    return result;\n  }\n}\n","export const ROLE = {\n  ADMIN: 0,\n  USER: 1,\n};\n","import { model, Schema } from 'mongoose';\nimport { ROLE } from '../../enums/role';\n\nexport const schema = new Schema(\n  {\n    email: { type: String, unique: true, required: true },\n    passwordHash: { type: String },\n    name: { type: String },\n    roles: {\n      type: [Number],\n      default: [ROLE.USER],\n      validate: {\n        validator(value) {\n          const ROLES = Object.values(ROLE);\n\n          return value.every(role => ROLES.includes(role));\n        },\n        message: '{VALUE} is not a valid role',\n      },\n    },\n\n    lastLoggedInAt: { type: Date },\n    passwordChangedAt: { type: Date },\n\n    verified: { type: Boolean, default: false },\n    verificationSecret: { type: String },\n    resetPasswordSecret: { type: String },\n  },\n  {\n    timestamps: true,\n  },\n);\n\nconst name = 'User';\n\nexport const UserConnector = model(name, schema);\n","// @flow\nimport jwt from 'jsonwebtoken';\n\nexport const CONFIG = {\n  algorithm: 'HS256',\n  expiresIn: '1d',\n  issuer: process.env.JWT_ISSUER,\n};\n\nexport function generateAccountVerificationSecret(userID) {\n  return jwt.sign({ userID }, process.env.ACCOUNT_VERIFICATION_SECRET, CONFIG);\n}\n","import { Model } from '../Model';\nimport { generateAccountVerificationSecret } from '../../graphql/utils/generateAccountVerificationSecret';\n\nexport class UserModel extends Model {\n  async create(userDoc) {\n    let user = await this.connector.create(userDoc);\n\n    user = await this.findByIDAndUpdate(user._id, {\n      $set: {\n        verificationSecret: generateAccountVerificationSecret(\n          user._id.toString(),\n        ),\n      },\n    });\n\n    return user;\n  }\n}\n","import { ExpenseConnector } from './connectors/Expense';\nimport { ExpenseModel } from './models/Expense';\nimport { UserConnector } from './connectors/User';\nimport { UserModel } from './models/User';\n\nexport const createContextModels = () => ({\n  Expense: new ExpenseModel({ connector: ExpenseConnector }),\n  User: new UserModel({ connector: UserConnector }),\n});\n","import { getUserByJWT } from './utils';\nimport { createContextModels } from '../mongoose/createContextModels';\n\nexport const createContext = async ({ req }) => {\n  const jwt = req.headers.authorization;\n\n  let user;\n\n  if (jwt) {\n    user = await getUserByJWT(req.headers.authorization);\n  }\n\n  return {\n    db: createContextModels(),\n    user,\n  };\n};\n","// import cuid from 'cuid';\n// import { expenses } from '../../../dataStore';\n\nexport async function addExpense(_, { input }, ctx) {\n  try {\n    const expense = await ctx.db.Expense.create(input);\n\n    return { expense, error: null };\n  } catch (error) {\n    return {\n      expense: null,\n      error: {\n        message: error.message,\n      },\n    };\n  }\n}\n\naddExpense.typeDef = /* GraphQL */ `\n  extend type Mutation {\n    addExpense(input: AddExpenseInput!): AddExpenseResponse!\n  }\n\n  input AddExpenseInput {\n    amount: Float!\n    date: String!\n    paymentMethod: String!\n    type: String!\n  }\n\n  type AddExpenseResponse implements MutationResponse {\n    expense: Expense\n    error: Error\n  }\n`;\n","// @flow\nimport jwt from 'jsonwebtoken';\n\nexport const CONFIG = {\n  algorithm: 'HS256',\n  expiresIn: '30m',\n  issuer: process.env.JWT_ISSUER,\n};\n\nexport function generatePasswordResetSecret(userID) {\n  return jwt.sign({ userID }, process.env.PASSWORD_RESET_SECRET, CONFIG);\n}\n","import jwt from 'jsonwebtoken';\nimport { CONFIG } from './generatePasswordResetSecret';\n\nexport function validatePasswordResetSecret(verificationSecret) {\n  jwt.verify(verificationSecret, process.env.PASSWORD_RESET_SECRET, CONFIG);\n}\n","// @flow\nimport invariant from 'invariant';\nimport upash from 'upash';\nimport { validatePasswordResetSecret } from '../../utils/validatePasswordResetSecret';\n\nexport async function changePassword(root, { input }, ctx) {\n  const { resetPasswordSecret, confirmPassword, password } = input;\n\n  try {\n    validatePasswordResetSecret(resetPasswordSecret);\n\n    let user = await ctx.db.User.findOne({ resetPasswordSecret }, ctx);\n\n    if (!user) {\n      return {\n        passwordChanged: false,\n        error: {\n          message:\n            'The account you are trying to change password of cannot be found',\n        },\n      };\n    }\n\n    if (confirmPassword !== password) {\n      return {\n        passwordChanged: false,\n        error: {\n          message:\n            'The provied password field and the confirm password field do not match',\n        },\n      };\n    }\n\n    if (password.length < 6) {\n      return {\n        passwordChanged: false,\n        error: {\n          message: 'The provided password is not long enough',\n        },\n      };\n    }\n\n    const passwordHash = await upash.use('argon2').hash(password);\n\n    user = await ctx.db.User.findByIDAndUpdate(\n      user._id,\n      {\n        $set: { passwordHash },\n        $unset: { resetPasswordSecret: true },\n      },\n      ctx,\n    );\n\n    invariant(user, 'user should be defined');\n\n    return { passwordChanged: true, error: null };\n  } catch (error) {\n    return {\n      passwordChanged: false,\n      error: {\n        message: 'An unexpected error occurred',\n      },\n    };\n  }\n}\n\nchangePassword.typeDef = /* GraphQL */ `\n  extend type Mutation {\n    changePassword(input: ChangePasswordInput!): ChangePasswordResponse!\n  }\n\n  input ChangePasswordInput {\n    confirmPassword: String!\n    password: String!\n    resetPasswordSecret: String!\n  }\n\n  type ChangePasswordResponse implements MutationResponse {\n    passwordChanged: Boolean!\n    error: Error\n  }\n`;\n","export const EMAIL_ADDRESS = {\n  NO_REPLY: 'no-reply@expensesApp.com',\n};\n","export const EMAIL_CATEGORY = {\n  RESET_PASSWORD: 'RESET_PASSWORD',\n  VERIFY_ACCOUNT: 'VERIFY_ACCOUNT',\n};\n","// @flow\nimport invariant from 'invariant';\nimport sgMail from '@sendgrid/mail';\nimport { EMAIL_ADDRESS } from '../../enums/emailAddress';\nimport { EMAIL_CATEGORY } from '../../enums/emailCategory';\n\nexport function emailAccountVerificationLink(user) {\n  invariant(\n    user.email && user.verificationSecret,\n    'user.email and user.verificationSecret should be defined',\n  );\n\n  sgMail.send({\n    from: {\n      name: 'Expenses App',\n      email: EMAIL_ADDRESS.NO_REPLY,\n    },\n    to: user.email,\n    substitutions: {\n      link: `${process.env.ACCOUNT_VERIFICATION_URL}?secret=${user.verificationSecret}`,\n      name: user.name || 'there',\n    },\n    text: verifyAccountTemplate,\n    subject: 'Expenses App Account Verification',\n    categories: [EMAIL_CATEGORY.VERIFY_ACCOUNT],\n  });\n}\n\nconst verifyAccountTemplate = `\nHi {{name}},\n\nPlease verify your email address by clicking the following link.\n\nTo maintain your security, this link expires in 1 day.\n\n{{link}}\n\nNot meant to receive this message? Just ignore this email.\n\nThanks,\n\nExpenses App`;\n","// @flow\nimport { emailAccountVerificationLink } from '../../utils/emailAccountVerificationLink';\nimport { generateAccountVerificationSecret } from '../../utils/generateAccountVerificationSecret';\n\nexport async function sendAccountVerificationLink(root, { input }, ctx) {\n  let user;\n\n  try {\n    user = await ctx.db.User.findOne({ email: input.email }, ctx);\n\n    if (!user) {\n      return {\n        error: {\n          message: 'The account you are trying to verify is not found',\n        },\n      };\n    }\n\n    if (user.verified) {\n      return {\n        error: {\n          message: 'The account you are trying to verify is already verified',\n        },\n      };\n    }\n\n    // create a secret to reset the password\n    const verificationSecret = generateAccountVerificationSecret(\n      user._id.toString(),\n    );\n\n    // store it in the user record\n    user = await ctx.db.User.findByIDAndUpdate(\n      user._id,\n      { $set: { verificationSecret } },\n      ctx,\n    );\n\n    // email the reset password link\n    await emailAccountVerificationLink(user);\n\n    return { error: null };\n  } catch (error) {\n    return {\n      error: {\n        message: 'An unexpected error occurred.',\n      },\n    };\n  }\n}\n\nsendAccountVerificationLink.typeDef = /* GraphQL */ `\n  extend type Mutation {\n    sendAccountVerificationLink(\n      input: SendAccountVerificationLinkInput!\n    ): SendAccountVerificationLinkResponse!\n  }\n\n  input SendAccountVerificationLinkInput {\n    email: String!\n  }\n\n  type SendAccountVerificationLinkResponse implements MutationResponse {\n    error: Error\n  }\n`;\n","import invariant from 'invariant';\nimport sgMail from '@sendgrid/mail';\nimport { EMAIL_ADDRESS } from '../../enums/emailAddress';\nimport { EMAIL_CATEGORY } from '../../enums/emailCategory';\n\nexport function emailPasswordResetLink(user) {\n  invariant(\n    user.email && user.resetPasswordSecret,\n    'user.email and user.resetPasswordSecret should be defined',\n  );\n\n  sendMail({\n    from: {\n      name: 'Expenses App',\n      email: EMAIL_ADDRESS.NO_REPLY,\n    },\n    to: user.email,\n    substitutions: {\n      link: `${process.env.PASSWORD_RESET_URL}?secret=${user.resetPasswordSecret}`,\n      name: user.name || 'there',\n    },\n    text: resetPasswordEmailTemplate,\n    subject: 'Password reset for your Expenses App account',\n    categories: [EMAIL_CATEGORY.RESET_PASSWORD],\n  });\n}\n\nconst resetPasswordEmailTemplate = `\nHi {{name}},\n\nPlease verify that tou want to reset your password by clicking the following link.\n\n\nTo maintain your security, this link expires in 30 minutes.\n\n{{link}}\n\n\nNot meant to receive this message? Just ignore this email.\n\nExpenses App`;\n","import { emailPasswordResetLink } from '../../utils/emailPasswordResetLink';\nimport { generatePasswordResetSecret } from '../../utils/generatePasswordResetSecret';\n\nexport async function sendResetPasswordLink(root, { input }, ctx) {\n  let user;\n\n  try {\n    user = await ctx.db.User.findOne({ email: input.email }, ctx);\n\n    if (!user) {\n      return {\n        error: {\n          message:\n            'The user account you are trying to reset the password cannot be found',\n        },\n      };\n    }\n\n    // create a secret to reset the password\n    const resetPasswordSecret = generatePasswordResetSecret(\n      user._id.toString(),\n    );\n\n    // store it in the user record\n    user = await ctx.db.User.findByIDAndUpdate(\n      user._id,\n      { $set: { resetPasswordSecret } },\n      ctx,\n    );\n\n    return { error: null };\n  } catch (error) {\n    return {\n      error: {\n        message: 'An unexpected error occurred',\n      },\n    };\n  }\n}\n\nsendResetPasswordLink.typeDef = /* GraphQL */ `\n  extend type Mutation {\n    sendResetPasswordLink(\n      input: SendResetPasswordLinkInput!\n    ): SendResetPasswordLinkResponse!\n  }\n\n  input SendResetPasswordLinkInput {\n    email: String!\n  }\n\n  type SendResetPasswordLinkResponse implements MutationResponse {\n    error: Error\n  }\n`;\n","import { isEmail } from 'validator';\nimport { hashPassword } from '../../utils/hashPassword';\nimport { emailAccountVerificationLink } from '../../utils/emailAccountVerificationLink';\n\nexport async function signUpWithEmail(_, { input }, ctx) {\n  const { email, password, name } = input;\n\n  if (!isEmail(email)) {\n    return {\n      created: false,\n      error: { message: 'Provided email is not an email' },\n    };\n  }\n\n  if (password.length < 6) {\n    return {\n      created: false,\n      error: { message: 'Provided password is too short' },\n    };\n  }\n\n  try {\n    // hash the password\n    const passwordHash = await hashPassword(password);\n\n    // create the user record\n    const user = await ctx.db.User.create({\n      email,\n      passwordHash,\n      name,\n    });\n\n    await emailAccountVerificationLink(user);\n\n    return { created: true, error: null };\n  } catch (error) {\n    console.log('error:', error.message)\n\n    return {\n      created: false,\n      error: { message: 'An unexpected error occurred' },\n    };\n  }\n}\n\nsignUpWithEmail.typeDef = /* GraphQL */ `\n  extend type Mutation {\n    signUpWithEmail(input: SignUpWithEmailInput!): SignUpWithEmailResponse!\n  }\n\n  input SignUpWithEmailInput {\n    email: String!\n    password: String!\n    name: String!\n  }\n\n  type SignUpWithEmailResponse implements MutationResponse {\n    created: Boolean!\n    error: Error\n  }\n`;\n","// @flow\nimport jwt from 'jsonwebtoken';\nimport { CONFIG } from './generateAccountVerificationSecret';\n\nexport function validateAccountVerificationSecret(verificationSecret) {\n  jwt.verify(\n    verificationSecret,\n    process.env.ACCOUNT_VERIFICATION_SECRET,\n    CONFIG,\n  );\n}\n","// @flow\nimport invariant from 'invariant';\nimport { validateAccountVerificationSecret } from '../../utils/validateAccountVerificationSecret';\n\nexport async function verifyAccount(root, { input }, ctx) {\n  const { verificationSecret } = input;\n\n  try {\n    validateAccountVerificationSecret(verificationSecret);\n\n    let user = await ctx.db.User.findOne({ verificationSecret }, ctx);\n\n    if (!user) {\n      return {\n        verified: false,\n        error: {\n          message: 'The account you are trying to verify cannot be found',\n        },\n      };\n    }\n\n    if (user.verified) {\n      return { verified: true, error: null };\n    }\n\n    user = await ctx.db.User.findByIDAndUpdate(\n      user._id,\n      {\n        $set: { verified: true },\n        $unset: { verificationSecret: true },\n      },\n      ctx,\n    );\n\n    invariant(user, 'user should be defined');\n\n    return { verified: user.verified, error: null };\n  } catch (error) {\n    return {\n      verified: false,\n      error: {\n        message: 'An unexpected error occurred',\n      },\n    };\n  }\n}\n\nverifyAccount.typeDef = /* GraphQL */ `\n  extend type Mutation {\n    verifyAccount(input: VerifyAccountInput!): VerifyAccountResponse!\n  }\n\n  input VerifyAccountInput {\n    verificationSecret: String!\n  }\n\n  type VerifyAccountResponse implements MutationResponse {\n    error: Error\n    verified: Boolean!\n  }\n`;\n","export * from './changePassword';\nexport * from './sendAccountVerificationLink';\nexport * from './sendResetPasswordLink';\nexport * from './signUpWithEmail';\nexport * from './verifyAccount';\n","export * from './Expense';\nexport * from './User';\n","export function getEnvVars() {\n  const secret = process.env.SECRET;\n  const date = Date.now();\n\n  return { secret: `${date} - ${secret ? secret : 'no secret found'}` };\n}\n\ngetEnvVars.typeDef = /* GraphQL */ `\n  extend type Query {\n    getEnvVars(input: GetEnvVarsInput!): EnvVars!\n  }\n\n  input GetEnvVarsInput {\n    \"\"\"\n    dummy field.\n    \"\"\"\n    _: Boolean\n  }\n`;\n","export async function getExpenses(_, args, ctx) {\n  const expenses = await ctx.db.Expense.find({});\n\n  return expenses;\n}\n\ngetExpenses.typeDef = /* GraphQL */ `\n  extend type Query {\n    getExpenses(input: GetExpensesInput!): [Expense]!\n  }\n\n  input GetExpensesInput {\n    \"\"\"\n    dummy field.\n    \"\"\"\n    _: Boolean\n  }\n`;\n","export * from './EnvVars';\nexport * from './Expense';\n","export const EnvVars = {};\n\nexport const typeDef = /* GraphQL */ `\n  type EnvVars {\n    secret: String\n  }\n`;\n","export const Expense = {};\n\nexport const typeDef = /* GraphQL */ `\n  type Expense {\n    amount: Float\n    date: String\n    id: ID\n    paymentMethod: String\n    type: String\n  }\n`;\n","export const User = {};\n\nexport const typeDef = /* GraphQL */ `\n  type User {\n    id: ID!\n    email: String!\n    name: String\n    roles: [Int]!\n  }\n`;\n","import { EnvVars } from './schema/EnvVars';\nimport { Expense } from './schema/Expense';\nimport { User } from './schema/User';\n\nexport const types = {\n  EnvVars,\n  Expense,\n  User,\n};\n","import { DateTime } from '@saeris/graphql-scalars';\nimport * as Mutation from './mutations';\nimport * as Query from './queries';\nimport { types } from './types';\n\nexport const resolvers = {\n  ...types,\n  DateTime,\n  Query,\n  Mutation,\n  MutationResponse: {\n    __resolveType: () => {\n      throw new Error(\n        'MutationResponse interface should not be used as a return type',\n      );\n    },\n  },\n};\n","export const typeDef = /* GraphQL */ `\n  type Error {\n    id: ID!\n    type: String!\n    title: String!\n    message: String!\n    helpText: String\n  }\n`;\n","export const typeDef = /* GraphQL */ `\n  interface MutationResponse {\n    error: Error\n  }\n`;\n","export { typeDef as Error } from './Error';\nexport { typeDef as MutationResponse } from './MutationResponse';\n","import * as expenseMutations from './mutations/Expense';\nimport * as userMutations from './mutations/User';\n\nexport const rootMutation = {\n  // dummy resolver to allow our 'empty' Query type\n  _: () => true,\n  ...expenseMutations,\n  ...userMutations,\n};\n","import * as envVarsQueries from './queries/EnvVars';\nimport * as expenseQueries from './queries/Expense';\n\nexport const rootQuery = {\n  // dummy resolver to allow our 'empty' Query type\n  _: () => true,\n  ...envVarsQueries,\n  ...expenseQueries,\n};\n","import { DateTimeScalar } from '@saeris/graphql-scalars';\nimport { typeDef as EnvVars } from './schema/EnvVars';\nimport { typeDef as Expense } from './schema/Expense';\nimport { typeDef as User } from './schema/User';\nimport { Error, MutationResponse } from './helpers';\nimport { rootMutation } from './rootMutation';\nimport { rootQuery } from './rootQuery';\n\nconst rootSchema = /* GraphQL */ `\n  type Query {\n    # TODO add explanation\n    # dummy resolver to allow empty type\n    _: Boolean\n  }\n\n  type Mutation {\n    # TODO add explanation\n    # dummy resolver to allow empty type\n    _: Boolean\n  }\n\n  schema {\n    query: Query\n    mutation: Mutation\n  }\n`;\n\n// $FlowFixMe\nexport const typeDefs = [\n  ...Object.values(rootMutation),\n  ...Object.values(rootQuery),\n]\n\n  // extract colocated resolver type defs\n  // $FlowFixMe - ignoring error above marks resolver as `mixed`\n  .map(resolver => resolver.typeDef)\n\n  // legacy resolvers do not have colocated typedefs, so filter out undefined\n  .filter(Boolean)\n\n  // add our GraphQL type defs, as there's no resolver they can attach to\n  .concat([EnvVars, Expense, User, DateTimeScalar, Error, MutationResponse])\n  .concat(rootSchema);\n","import { ApolloServer } from 'apollo-server-micro';\nimport { createContext } from './createContext';\nimport { resolvers } from './resolvers';\nimport { typeDefs } from './typeDefs';\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  introspection: true,\n  playground: true,\n  context: createContext,\n});\n\nexport const createHandler = () => server.createHandler();\n","export const handleConnectionError = error => {\n  console.log('handleConnectionError:', error.message);\n};\n","import mongoose from 'mongoose';\nimport { handleConnectionError } from './handleConnectionError';\n\nexport const connect = async () => {\n  try {\n    mongoose.connect(process.env.MONGODB_CONNECTION_STRING, {\n      useNewUrlParser: true,\n    });\n\n    mongoose.connection.on('error', handleConnectionError);\n\n    mongoose.set('debug', process.env.NODE_ENV === 'development');\n  } catch (error) {\n    handleConnectionError(error);\n  }\n};\n","// @flow\nimport argon2 from '@phc/argon2';\nimport cors from 'micro-cors';\nimport upash from 'upash';\nimport { createHandler } from './graphql/createHandler';\nimport { connect as mongooseConnect } from './mongoose';\nimport sgMail from '@sendgrid/mail';\n\n// connect to mongoose\nmongooseConnect();\n\n// setup emailing service\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n// install password hashing algorithm\nif (!upash.list().includes('argon2')) {\n  upash.install('argon2', argon2);\n}\n\n// export the request handler function\nexport default cors({\n  allowMethods: ['POST', 'GET', 'OPTIONS'],\n})((req, res) => {\n  if (req.method === 'OPTIONS') {\n    res.end();\n    return;\n  }\n\n  // eslint-disable-next-line consistent-return\n  return createHandler()(req, res);\n});\n"],"sourceRoot":""}